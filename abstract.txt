Software Vulnerabilities (SVs) are security weaknesses and flaws that are exploitable in cyber-attacks. Delay in the assessment of SVs might cause serious consequences due to the unknown impacts of the SVs on the attacked systems. The state-of-the-art approach has been proposed to work directly on the code changes that were just committed to the repository and deemed to have vulnerable code, and produces the assessment grades for the detected vulnerability. However, the existing approach still has low accuracy due to its limited code change representations and surrounding contexts.  We propose a Context-aware, Graph-based, Commit-level Vulnerability Assessment Model, CAT, that evaluates a vulnerability-introducing code and provides the CVSS assessment grades for the detected vulnerability. To build CAT, we have two key novel components. First, we design a novel context-aware, graph-based, representation learning (RL) model to learn the contextualized embeddings for the code changes that integrate program dependencies and the surrounding contexts of code changes, facilitating the learning to provide the CVSS assessment grades for the vulnerability. Second, our automated assessment model, during the assessment of one security aspect, also considers the impacts of the other aspects by leveraging multi-task learning (each task learning to assess one aspect) to propagate the learning from one task to another. Our empirical evaluation shows that on a large dataset of vulnerabilities in C, CAT achieves F-score of 25.5% and MCC of 26.9% relatively higher than the state-of-the-art model, DeepCVA, in vulnerability assessment. In the dataset of vulnerabilities inJava, CAT achieves F-score of 20.4% and MCC of 28.0% relatively higher than DeepCVA in the assessment.


Software Vulnerabilities (SVs) are security weaknesses and flaws that
are exploitable in cyber-attacks. Delay in the assessment of SVs might
cause serious consequences due to the unknown impacts of the SVs on
the attacked systems. The state-of-the-art approach has been proposed
to work directly on the committed code changes that were deemed to
have vulnerable code, and produces the assessment grades for the
vulnerability without waiting until the SV reports are filed. However,
the existing approach still has low accuracy due to its limited code
change representations and surrounding contexts. In this work, we
propose CAT, a Context-aware, Graph-based, Commit-level Vulnerability
Assessment Model that evaluates a vulnerability-introducing code and
provides the CVSS assessment grades for the vulnerability. One of the
key solutions is a novel context-aware, graph-based, representation
learning (RL) model to learn the contextualized embeddings for the
code changes that integrate program dependencies and the surrounding
contexts of code changes. We utilize the contextualized embeddings to
learn to provide the CVSS assessment grades for the
vulnerability. During the assessment of one aspect, we also consider
the impacts of the other aspects by leveraging a multi-task learning
model (each task learning to assess one aspect) to propagate the
learning from one task to another. Our empirical evaluation shows that
on a large dataset of vulnerabilities in C code, CAT achieves F-score
of 25.5% and MCC of 26.9% relatively higher than the state-of-the-art
model in vulnerability assessment. In the dataset of vulnerabilities
in Java, CAT achieves F-score of 14.3% and MCC of 8.0% relatively
higher than the state-of-the-art model in vulnerability assessment.
